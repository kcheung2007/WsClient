//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 
namespace WsClient {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ZANTAZ_StoreAndRetrieveServiceSoapBinding", Namespace="ZANTAZ_StoreAndRetrieveService")]
    //public partial class ZANTAZ_StoreAndRetrieveService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    public partial class ZANTAZ_StoreAndRetrieveService : Microsoft.Web.Services2.WebServicesClientProtocol 
    {
        
        private System.Threading.SendOrPostCallback storeDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDocument1OperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback previewDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveMimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveMimeAndSampleOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAliveOperationCompleted;
        
        private System.Threading.SendOrPostCallback destroyDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveMimeWithHitHighlightedOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveSCMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback testMessagePushOperationCompleted;
        
        /// <remarks/>
        public ZANTAZ_StoreAndRetrieveService() 
        {
            //this.Url = "http://10.1.89.201/nexch/services/ZANTAZ_StoreAndRetrieveService";
            // WsClient.Properties.Settings appSetting = new WsClient.Properties.Settings();
            this.Url = WsClient.Program.appSetting.WsServer_URL;
        }
        
        public ZANTAZ_StoreAndRetrieveService( string wsUrl ) 
        {
            this.Url = wsUrl;
        }
        /// <remarks/>
        public event storeDocumentCompletedEventHandler storeDocumentCompleted;
        
        /// <remarks/>
        public event updateDocumentCompletedEventHandler updateDocumentCompleted;
        
        /// <remarks/>
        public event retrieveCompleteCompletedEventHandler retrieveCompleteCompleted;
        
        /// <remarks/>
        public event updateDocument1CompletedEventHandler updateDocument1Completed;
        
        /// <remarks/>
        public event retrieveDocumentCompletedEventHandler retrieveDocumentCompleted;
        
        /// <remarks/>
        public event previewDocumentCompletedEventHandler previewDocumentCompleted;
        
        /// <remarks/>
        public event retrieveMimeCompletedEventHandler retrieveMimeCompleted;
        
        /// <remarks/>
        public event retrieveMimeAndSampleCompletedEventHandler retrieveMimeAndSampleCompleted;
        
        /// <remarks/>
        public event isAliveCompletedEventHandler isAliveCompleted;
        
        /// <remarks/>
        public event destroyDocumentCompletedEventHandler destroyDocumentCompleted;
        
        /// <remarks/>
        public event retrieveMimeWithHitHighlightedCompletedEventHandler retrieveMimeWithHitHighlightedCompleted;
        
        /// <remarks/>
        public event retrieveSCMessageCompletedEventHandler retrieveSCMessageCompleted;
        
        /// <remarks/>
        public event testMessagePushCompletedEventHandler testMessagePushCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="ZANTAZ_StoreAndRetrieveService", ResponseNamespace="ZANTAZ_StoreAndRetrieveService")]
        [return: System.Xml.Serialization.SoapElementAttribute("storeDocumentReturn")]
        public string storeDocument(long fileSize, string storeTime, string domainName, string mailFrom, string rcptTo) {
            object[] results = this.Invoke("storeDocument", new object[] {
                        fileSize,
                        storeTime,
                        domainName,
                        mailFrom,
                        rcptTo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstoreDocument(long fileSize, string storeTime, string domainName, string mailFrom, string rcptTo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("storeDocument", new object[] {
                        fileSize,
                        storeTime,
                        domainName,
                        mailFrom,
                        rcptTo}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndstoreDocument(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void storeDocumentAsync(long fileSize, string storeTime, string domainName, string mailFrom, string rcptTo) {
            this.storeDocumentAsync(fileSize, storeTime, domainName, mailFrom, rcptTo, null);
        }
        
        /// <remarks/>
        public void storeDocumentAsync(long fileSize, string storeTime, string domainName, string mailFrom, string rcptTo, object userState) {
            if ((this.storeDocumentOperationCompleted == null)) {
                this.storeDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstoreDocumentOperationCompleted);
            }
            this.InvokeAsync("storeDocument", new object[] {
                        fileSize,
                        storeTime,
                        domainName,
                        mailFrom,
                        rcptTo}, this.storeDocumentOperationCompleted, userState);
        }
        
        private void OnstoreDocumentOperationCompleted(object arg) {
            if ((this.storeDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.storeDocumentCompleted(this, new storeDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="ZANTAZ_StoreAndRetrieveService", ResponseNamespace="ZANTAZ_StoreAndRetrieveService")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateDocumentReturn")]
        public bool updateDocument(string pKey, string pDomainName) {
            object[] results = this.Invoke("updateDocument", new object[] {
                        pKey,
                        pDomainName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateDocument(string pKey, string pDomainName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateDocument", new object[] {
                        pKey,
                        pDomainName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndupdateDocument(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateDocumentAsync(string pKey, string pDomainName) {
            this.updateDocumentAsync(pKey, pDomainName, null);
        }
        
        /// <remarks/>
        public void updateDocumentAsync(string pKey, string pDomainName, object userState) {
            if ((this.updateDocumentOperationCompleted == null)) {
                this.updateDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDocumentOperationCompleted);
            }
            this.InvokeAsync("updateDocument", new object[] {
                        pKey,
                        pDomainName}, this.updateDocumentOperationCompleted, userState);
        }
        
        private void OnupdateDocumentOperationCompleted(object arg) {
            if ((this.updateDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDocumentCompleted(this, new updateDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="ZANTAZ_StoreAndRetrieveService", ResponseNamespace="ZANTAZ_StoreAndRetrieveService")]
        [return: System.Xml.Serialization.SoapElementAttribute("retrieveCompleteReturn")]
        public bool retrieveComplete(string pKey, string pDomainName) {
            object[] results = this.Invoke("retrieveComplete", new object[] {
                        pKey,
                        pDomainName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginretrieveComplete(string pKey, string pDomainName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("retrieveComplete", new object[] {
                        pKey,
                        pDomainName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndretrieveComplete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void retrieveCompleteAsync(string pKey, string pDomainName) {
            this.retrieveCompleteAsync(pKey, pDomainName, null);
        }
        
        /// <remarks/>
        public void retrieveCompleteAsync(string pKey, string pDomainName, object userState) {
            if ((this.retrieveCompleteOperationCompleted == null)) {
                this.retrieveCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveCompleteOperationCompleted);
            }
            this.InvokeAsync("retrieveComplete", new object[] {
                        pKey,
                        pDomainName}, this.retrieveCompleteOperationCompleted, userState);
        }
        
        private void OnretrieveCompleteOperationCompleted(object arg) {
            if ((this.retrieveCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveCompleteCompleted(this, new retrieveCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="updateDocument1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="ZANTAZ_StoreAndRetrieveService", ResponseNamespace="ZANTAZ_StoreAndRetrieveService")]
        [return: System.Xml.Serialization.SoapElementAttribute("retrieveUpdateReturn")]
        public string updateDocument(string pKey, string domainName, string dnName) {
            object[] results = this.Invoke("updateDocument1", new object[] {
                        pKey,
                        domainName,
                        dnName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateDocument1(string pKey, string domainName, string dnName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateDocument1", new object[] {
                        pKey,
                        domainName,
                        dnName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndupdateDocument1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateDocument1Async(string pKey, string domainName, string dnName) {
            this.updateDocument1Async(pKey, domainName, dnName, null);
        }
        
        /// <remarks/>
        public void updateDocument1Async(string pKey, string domainName, string dnName, object userState) {
            if ((this.updateDocument1OperationCompleted == null)) {
                this.updateDocument1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDocument1OperationCompleted);
            }
            this.InvokeAsync("updateDocument1", new object[] {
                        pKey,
                        domainName,
                        dnName}, this.updateDocument1OperationCompleted, userState);
        }
        
        private void OnupdateDocument1OperationCompleted(object arg) {
            if ((this.updateDocument1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDocument1Completed(this, new updateDocument1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="ZANTAZ_StoreAndRetrieveService", ResponseNamespace="ZANTAZ_StoreAndRetrieveService")]
        [return: System.Xml.Serialization.SoapElementAttribute("retrieveDocumentReturn")]
        public string retrieveDocument(string pKey, string domainName) {
            object[] results = this.Invoke("retrieveDocument", new object[] {
                        pKey,
                        domainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginretrieveDocument(string pKey, string domainName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("retrieveDocument", new object[] {
                        pKey,
                        domainName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndretrieveDocument(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void retrieveDocumentAsync(string pKey, string domainName) {
            this.retrieveDocumentAsync(pKey, domainName, null);
        }
        
        /// <remarks/>
        public void retrieveDocumentAsync(string pKey, string domainName, object userState) {
            if ((this.retrieveDocumentOperationCompleted == null)) {
                this.retrieveDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveDocumentOperationCompleted);
            }
            this.InvokeAsync("retrieveDocument", new object[] {
                        pKey,
                        domainName}, this.retrieveDocumentOperationCompleted, userState);
        }
        
        private void OnretrieveDocumentOperationCompleted(object arg) {
            if ((this.retrieveDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveDocumentCompleted(this, new retrieveDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="ZANTAZ_StoreAndRetrieveService", ResponseNamespace="ZANTAZ_StoreAndRetrieveService")]
        [return: System.Xml.Serialization.SoapElementAttribute("previewDocumentReturn")]
        public string[] previewDocument(string pKey, string domainName, int maxChars) {
            object[] results = this.Invoke("previewDocument", new object[] {
                        pKey,
                        domainName,
                        maxChars});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginpreviewDocument(string pKey, string domainName, int maxChars, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("previewDocument", new object[] {
                        pKey,
                        domainName,
                        maxChars}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndpreviewDocument(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void previewDocumentAsync(string pKey, string domainName, int maxChars) {
            this.previewDocumentAsync(pKey, domainName, maxChars, null);
        }
        
        /// <remarks/>
        public void previewDocumentAsync(string pKey, string domainName, int maxChars, object userState) {
            if ((this.previewDocumentOperationCompleted == null)) {
                this.previewDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpreviewDocumentOperationCompleted);
            }
            this.InvokeAsync("previewDocument", new object[] {
                        pKey,
                        domainName,
                        maxChars}, this.previewDocumentOperationCompleted, userState);
        }
        
        private void OnpreviewDocumentOperationCompleted(object arg) {
            if ((this.previewDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.previewDocumentCompleted(this, new previewDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="ZANTAZ_StoreAndRetrieveService", ResponseNamespace="ZANTAZ_StoreAndRetrieveService")]
        [return: System.Xml.Serialization.SoapElementAttribute("retrieveMimeReturn")]
        public string retrieveMime(string pKey, string domainName) {
            object[] results = this.Invoke("retrieveMime", new object[] {
                        pKey,
                        domainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginretrieveMime(string pKey, string domainName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("retrieveMime", new object[] {
                        pKey,
                        domainName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndretrieveMime(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void retrieveMimeAsync(string pKey, string domainName) {
            this.retrieveMimeAsync(pKey, domainName, null);
        }
        
        /// <remarks/>
        public void retrieveMimeAsync(string pKey, string domainName, object userState) {
            if ((this.retrieveMimeOperationCompleted == null)) {
                this.retrieveMimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveMimeOperationCompleted);
            }
            this.InvokeAsync("retrieveMime", new object[] {
                        pKey,
                        domainName}, this.retrieveMimeOperationCompleted, userState);
        }
        
        private void OnretrieveMimeOperationCompleted(object arg) {
            if ((this.retrieveMimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveMimeCompleted(this, new retrieveMimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="ZANTAZ_StoreAndRetrieveService", ResponseNamespace="ZANTAZ_StoreAndRetrieveService")]
        [return: System.Xml.Serialization.SoapElementAttribute("retrieveMimeAndSampleReturn")]
        public string retrieveMimeAndSample(string pKey, string domainName, string messageType, string messageDirection, string requestId, string userName, int[] groupIds, string[] mailboxNames) {
            object[] results = this.Invoke("retrieveMimeAndSample", new object[] {
                        pKey,
                        domainName,
                        messageType,
                        messageDirection,
                        requestId,
                        userName,
                        groupIds,
                        mailboxNames});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginretrieveMimeAndSample(string pKey, string domainName, string messageType, string messageDirection, string requestId, string userName, int[] groupIds, string[] mailboxNames, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("retrieveMimeAndSample", new object[] {
                        pKey,
                        domainName,
                        messageType,
                        messageDirection,
                        requestId,
                        userName,
                        groupIds,
                        mailboxNames}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndretrieveMimeAndSample(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void retrieveMimeAndSampleAsync(string pKey, string domainName, string messageType, string messageDirection, string requestId, string userName, int[] groupIds, string[] mailboxNames) {
            this.retrieveMimeAndSampleAsync(pKey, domainName, messageType, messageDirection, requestId, userName, groupIds, mailboxNames, null);
        }
        
        /// <remarks/>
        public void retrieveMimeAndSampleAsync(string pKey, string domainName, string messageType, string messageDirection, string requestId, string userName, int[] groupIds, string[] mailboxNames, object userState) {
            if ((this.retrieveMimeAndSampleOperationCompleted == null)) {
                this.retrieveMimeAndSampleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveMimeAndSampleOperationCompleted);
            }
            this.InvokeAsync("retrieveMimeAndSample", new object[] {
                        pKey,
                        domainName,
                        messageType,
                        messageDirection,
                        requestId,
                        userName,
                        groupIds,
                        mailboxNames}, this.retrieveMimeAndSampleOperationCompleted, userState);
        }
        
        private void OnretrieveMimeAndSampleOperationCompleted(object arg) {
            if ((this.retrieveMimeAndSampleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveMimeAndSampleCompleted(this, new retrieveMimeAndSampleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="ZANTAZ_StoreAndRetrieveService", ResponseNamespace="ZANTAZ_StoreAndRetrieveService")]
        [return: System.Xml.Serialization.SoapElementAttribute("isAliveReturn")]
        public bool isAlive(string domainName) {
            object[] results = this.Invoke("isAlive", new object[] {
                        domainName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginisAlive(string domainName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("isAlive", new object[] {
                        domainName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndisAlive(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isAliveAsync(string domainName) {
            this.isAliveAsync(domainName, null);
        }
        
        /// <remarks/>
        public void isAliveAsync(string domainName, object userState) {
            if ((this.isAliveOperationCompleted == null)) {
                this.isAliveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAliveOperationCompleted);
            }
            this.InvokeAsync("isAlive", new object[] {
                        domainName}, this.isAliveOperationCompleted, userState);
        }
        
        private void OnisAliveOperationCompleted(object arg) {
            if ((this.isAliveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAliveCompleted(this, new isAliveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="ZANTAZ_StoreAndRetrieveService", ResponseNamespace="ZANTAZ_StoreAndRetrieveService")]
        [return: System.Xml.Serialization.SoapElementAttribute("destroyDocumentReturn")]
        public string destroyDocument(string pKey, string domainName) {
            object[] results = this.Invoke("destroyDocument", new object[] {
                        pKey,
                        domainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindestroyDocument(string pKey, string domainName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("destroyDocument", new object[] {
                        pKey,
                        domainName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EnddestroyDocument(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void destroyDocumentAsync(string pKey, string domainName) {
            this.destroyDocumentAsync(pKey, domainName, null);
        }
        
        /// <remarks/>
        public void destroyDocumentAsync(string pKey, string domainName, object userState) {
            if ((this.destroyDocumentOperationCompleted == null)) {
                this.destroyDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndestroyDocumentOperationCompleted);
            }
            this.InvokeAsync("destroyDocument", new object[] {
                        pKey,
                        domainName}, this.destroyDocumentOperationCompleted, userState);
        }
        
        private void OndestroyDocumentOperationCompleted(object arg) {
            if ((this.destroyDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.destroyDocumentCompleted(this, new destroyDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="ZANTAZ_StoreAndRetrieveService", ResponseNamespace="ZANTAZ_StoreAndRetrieveService")]
        [return: System.Xml.Serialization.SoapElementAttribute("retrieveMimeWithHitHighlightedReturn")]
        public string retrieveMimeWithHitHighlighted(string pKey, string domainName, LexiconInfo[] lexiconInfo, string nlpVersion) {
            object[] results = this.Invoke("retrieveMimeWithHitHighlighted", new object[] {
                        pKey,
                        domainName,
                        lexiconInfo,
                        nlpVersion});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginretrieveMimeWithHitHighlighted(string pKey, string domainName, LexiconInfo[] lexiconInfo, string nlpVersion, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("retrieveMimeWithHitHighlighted", new object[] {
                        pKey,
                        domainName,
                        lexiconInfo,
                        nlpVersion}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndretrieveMimeWithHitHighlighted(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void retrieveMimeWithHitHighlightedAsync(string pKey, string domainName, LexiconInfo[] lexiconInfo, string nlpVersion) {
            this.retrieveMimeWithHitHighlightedAsync(pKey, domainName, lexiconInfo, nlpVersion, null);
        }
        
        /// <remarks/>
        public void retrieveMimeWithHitHighlightedAsync(string pKey, string domainName, LexiconInfo[] lexiconInfo, string nlpVersion, object userState) {
            if ((this.retrieveMimeWithHitHighlightedOperationCompleted == null)) {
                this.retrieveMimeWithHitHighlightedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveMimeWithHitHighlightedOperationCompleted);
            }
            this.InvokeAsync("retrieveMimeWithHitHighlighted", new object[] {
                        pKey,
                        domainName,
                        lexiconInfo,
                        nlpVersion}, this.retrieveMimeWithHitHighlightedOperationCompleted, userState);
        }
        
        private void OnretrieveMimeWithHitHighlightedOperationCompleted(object arg) {
            if ((this.retrieveMimeWithHitHighlightedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveMimeWithHitHighlightedCompleted(this, new retrieveMimeWithHitHighlightedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="ZANTAZ_StoreAndRetrieveService", ResponseNamespace="ZANTAZ_StoreAndRetrieveService")]
        [return: System.Xml.Serialization.SoapElementAttribute("retrieveSCMessageReturn")]
        public SCMessage retrieveSCMessage(string pKey, string domainName) {
            object[] results = this.Invoke("retrieveSCMessage", new object[] {
                        pKey,
                        domainName});
            return ((SCMessage)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginretrieveSCMessage(string pKey, string domainName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("retrieveSCMessage", new object[] {
                        pKey,
                        domainName}, callback, asyncState);
        }
        
        /// <remarks/>
        public SCMessage EndretrieveSCMessage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SCMessage)(results[0]));
        }
        
        /// <remarks/>
        public void retrieveSCMessageAsync(string pKey, string domainName) {
            this.retrieveSCMessageAsync(pKey, domainName, null);
        }
        
        /// <remarks/>
        public void retrieveSCMessageAsync(string pKey, string domainName, object userState) {
            if ((this.retrieveSCMessageOperationCompleted == null)) {
                this.retrieveSCMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveSCMessageOperationCompleted);
            }
            this.InvokeAsync("retrieveSCMessage", new object[] {
                        pKey,
                        domainName}, this.retrieveSCMessageOperationCompleted, userState);
        }
        
        private void OnretrieveSCMessageOperationCompleted(object arg) {
            if ((this.retrieveSCMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveSCMessageCompleted(this, new retrieveSCMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="ZANTAZ_StoreAndRetrieveService", ResponseNamespace="ZANTAZ_StoreAndRetrieveService")]
        [return: System.Xml.Serialization.SoapElementAttribute("testMessagePushReturn")]
        public string testMessagePush(string pKey, string domainName, string requestId) {
            object[] results = this.Invoke("testMessagePush", new object[] {
                        pKey,
                        domainName,
                        requestId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegintestMessagePush(string pKey, string domainName, string requestId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("testMessagePush", new object[] {
                        pKey,
                        domainName,
                        requestId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndtestMessagePush(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void testMessagePushAsync(string pKey, string domainName, string requestId) {
            this.testMessagePushAsync(pKey, domainName, requestId, null);
        }
        
        /// <remarks/>
        public void testMessagePushAsync(string pKey, string domainName, string requestId, object userState) {
            if ((this.testMessagePushOperationCompleted == null)) {
                this.testMessagePushOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestMessagePushOperationCompleted);
            }
            this.InvokeAsync("testMessagePush", new object[] {
                        pKey,
                        domainName,
                        requestId}, this.testMessagePushOperationCompleted, userState);
        }
        
        private void OntestMessagePushOperationCompleted(object arg) {
            if ((this.testMessagePushCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testMessagePushCompleted(this, new testMessagePushCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://singlecast.digitalsupervisor.zantaz.com")]
    public partial class LexiconInfo {
        
        private string lexiconnameField;
        
        private FieldToPhraseInfo[] matchesField;
        
        /// <remarks/>
        public string lexiconname {
            get {
                return this.lexiconnameField;
            }
            set {
                this.lexiconnameField = value;
            }
        }
        
        /// <remarks/>
        public FieldToPhraseInfo[] matches {
            get {
                return this.matchesField;
            }
            set {
                this.matchesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SinglecastEngine")]
    public partial class FieldToPhraseInfo {
        
        private string fieldField;
        
        private string[] phrasesField;
        
        /// <remarks/>
        public string field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        public string[] phrases {
            get {
                return this.phrasesField;
            }
            set {
                this.phrasesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SinglecastEngine")]
    public partial class PolicyMatchDetails {
        
        private string locationField;
        
        private string termField;
        
        /// <remarks/>
        public string location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string term {
            get {
                return this.termField;
            }
            set {
                this.termField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SinglecastEngine")]
    public partial class PolicyMatch {
        
        private int ruleIdField;
        
        private int conditionIdField;
        
        private int actionField;
        
        private PolicyMatchDetails[] detailsField;
        
        private string[] filenamesField;
        
        /// <remarks/>
        public int ruleId {
            get {
                return this.ruleIdField;
            }
            set {
                this.ruleIdField = value;
            }
        }
        
        /// <remarks/>
        public int conditionId {
            get {
                return this.conditionIdField;
            }
            set {
                this.conditionIdField = value;
            }
        }
        
        /// <remarks/>
        public int action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        public PolicyMatchDetails[] details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        public string[] filenames {
            get {
                return this.filenamesField;
            }
            set {
                this.filenamesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(TypeName="LexiconInfo", Namespace="urn:SinglecastEngine")]
    public partial class LexiconInfo1 {
        
        private string lexiconnameField;
        
        private FieldToPhraseInfo[] matchesField;
        
        /// <remarks/>
        public string lexiconname {
            get {
                return this.lexiconnameField;
            }
            set {
                this.lexiconnameField = value;
            }
        }
        
        /// <remarks/>
        public FieldToPhraseInfo[] matches {
            get {
                return this.matchesField;
            }
            set {
                this.matchesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SinglecastEngine")]
    public partial class MatchInfo {
        
        private string filternameField;
        
        private string groupnameField;
        
        private string[] mailboxesField;
        
        /// <remarks/>
        public string filtername {
            get {
                return this.filternameField;
            }
            set {
                this.filternameField = value;
            }
        }
        
        /// <remarks/>
        public string groupname {
            get {
                return this.groupnameField;
            }
            set {
                this.groupnameField = value;
            }
        }
        
        /// <remarks/>
        public string[] mailboxes {
            get {
                return this.mailboxesField;
            }
            set {
                this.mailboxesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SinglecastEngine")]
    public partial class EnvelopeHeader {
        
        private string dataField;
        
        private long typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public long type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SinglecastEngine")]
    public partial class Envelope {
        
        private EnvelopeHeader[] envHeadersField;
        
        /// <remarks/>
        public EnvelopeHeader[] envHeaders {
            get {
                return this.envHeadersField;
            }
            set {
                this.envHeadersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SinglecastEngine")]
    public partial class AttachmentInfo {
        
        private long attachmentSizeField;
        
        private string attachmentNameField;
        
        private long startposField;
        
        private long endposField;
        
        private bool isHighlightedField;
        
        /// <remarks/>
        public long attachmentSize {
            get {
                return this.attachmentSizeField;
            }
            set {
                this.attachmentSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string attachmentName {
            get {
                return this.attachmentNameField;
            }
            set {
                this.attachmentNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("start-pos")]
        public long startpos {
            get {
                return this.startposField;
            }
            set {
                this.startposField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute("end-pos")]
        public long endpos {
            get {
                return this.endposField;
            }
            set {
                this.endposField = value;
            }
        }
        
        /// <remarks/>
        public bool isHighlighted {
            get {
                return this.isHighlightedField;
            }
            set {
                this.isHighlightedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SinglecastEngine")]
    public partial class User {
        
        private string nameField;
        
        private string emailField;
        
        private int typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public int type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://singlecast.digitalsupervisor.zantaz.com")]
    public partial class SCMessage {
        
        private string messageIdField;
        
        private User senderField;
        
        private User[] recipientsField;
        
        private string subjectField;
        
        private string wSubjectField;
        
        private long codePageField;
        
        private long bodyIsUtf8Field;
        
        private long subjectIsUtf8Field;
        
        private long bodyNotConvertedToUtf8Field;
        
        private long bodyCodePageIDField;
        
        private string contentTypeField;
        
        private double dateSentField;
        
        private double dateReceivedField;
        
        private string bodyField;
        
        private string filenameField;
        
        private string wFilenameField;
        
        private string messageHeaderField;
        
        private string conversationTopicField;
        
        private long priorityField;
        
        private long importanceField;
        
        private long sensitivityField;
        
        private long optLongField1Field;
        
        private long optLongField2Field;
        
        private long optLongField3Field;
        
        private long optLongField4Field;
        
        private string optStringField1Field;
        
        private string optStringField2Field;
        
        private string optStringField3Field;
        
        private string optStringField4Field;
        
        private string educomMessageIdField;
        
        private string educomServerIdField;
        
        private bool duplicateIdField;
        
        private AttachmentInfo[] attachmentInfoField;
        
        private bool hasEmbeddedDataField;
        
        private Envelope[] envelopesField;
        
        private string requestIdField;
        
        private string versionField;
        
        private long sentDateField;
        
        private long archivedDateField;
        
        private string bodyHighlightField;
        
        private MatchInfo[] matchesField;
        
        private LexiconInfo1[] lexiconsField;
        
        private string nlpVersionField;
        
        private string msgDirectionField;
        
        private bool policiesAppliedField;
        
        private PolicyMatch[] policyMatchesField;
        
        private string policiesSnapshotField;
        
        private string sampledByField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string messageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        public User sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
            }
        }
        
        /// <remarks/>
        public User[] recipients {
            get {
                return this.recipientsField;
            }
            set {
                this.recipientsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string wSubject {
            get {
                return this.wSubjectField;
            }
            set {
                this.wSubjectField = value;
            }
        }
        
        /// <remarks/>
        public long codePage {
            get {
                return this.codePageField;
            }
            set {
                this.codePageField = value;
            }
        }
        
        /// <remarks/>
        public long bodyIsUtf8 {
            get {
                return this.bodyIsUtf8Field;
            }
            set {
                this.bodyIsUtf8Field = value;
            }
        }
        
        /// <remarks/>
        public long subjectIsUtf8 {
            get {
                return this.subjectIsUtf8Field;
            }
            set {
                this.subjectIsUtf8Field = value;
            }
        }
        
        /// <remarks/>
        public long bodyNotConvertedToUtf8 {
            get {
                return this.bodyNotConvertedToUtf8Field;
            }
            set {
                this.bodyNotConvertedToUtf8Field = value;
            }
        }
        
        /// <remarks/>
        public long bodyCodePageID {
            get {
                return this.bodyCodePageIDField;
            }
            set {
                this.bodyCodePageIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string contentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
            }
        }
        
        /// <remarks/>
        public double dateSent {
            get {
                return this.dateSentField;
            }
            set {
                this.dateSentField = value;
            }
        }
        
        /// <remarks/>
        public double dateReceived {
            get {
                return this.dateReceivedField;
            }
            set {
                this.dateReceivedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string wFilename {
            get {
                return this.wFilenameField;
            }
            set {
                this.wFilenameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string messageHeader {
            get {
                return this.messageHeaderField;
            }
            set {
                this.messageHeaderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string conversationTopic {
            get {
                return this.conversationTopicField;
            }
            set {
                this.conversationTopicField = value;
            }
        }
        
        /// <remarks/>
        public long priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public long importance {
            get {
                return this.importanceField;
            }
            set {
                this.importanceField = value;
            }
        }
        
        /// <remarks/>
        public long sensitivity {
            get {
                return this.sensitivityField;
            }
            set {
                this.sensitivityField = value;
            }
        }
        
        /// <remarks/>
        public long optLongField1 {
            get {
                return this.optLongField1Field;
            }
            set {
                this.optLongField1Field = value;
            }
        }
        
        /// <remarks/>
        public long optLongField2 {
            get {
                return this.optLongField2Field;
            }
            set {
                this.optLongField2Field = value;
            }
        }
        
        /// <remarks/>
        public long optLongField3 {
            get {
                return this.optLongField3Field;
            }
            set {
                this.optLongField3Field = value;
            }
        }
        
        /// <remarks/>
        public long optLongField4 {
            get {
                return this.optLongField4Field;
            }
            set {
                this.optLongField4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string optStringField1 {
            get {
                return this.optStringField1Field;
            }
            set {
                this.optStringField1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string optStringField2 {
            get {
                return this.optStringField2Field;
            }
            set {
                this.optStringField2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string optStringField3 {
            get {
                return this.optStringField3Field;
            }
            set {
                this.optStringField3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string optStringField4 {
            get {
                return this.optStringField4Field;
            }
            set {
                this.optStringField4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string EducomMessageId {
            get {
                return this.educomMessageIdField;
            }
            set {
                this.educomMessageIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string EducomServerId {
            get {
                return this.educomServerIdField;
            }
            set {
                this.educomServerIdField = value;
            }
        }
        
        /// <remarks/>
        public bool duplicateId {
            get {
                return this.duplicateIdField;
            }
            set {
                this.duplicateIdField = value;
            }
        }
        
        /// <remarks/>
        public AttachmentInfo[] attachmentInfo {
            get {
                return this.attachmentInfoField;
            }
            set {
                this.attachmentInfoField = value;
            }
        }
        
        /// <remarks/>
        public bool hasEmbeddedData {
            get {
                return this.hasEmbeddedDataField;
            }
            set {
                this.hasEmbeddedDataField = value;
            }
        }
        
        /// <remarks/>
        public Envelope[] envelopes {
            get {
                return this.envelopesField;
            }
            set {
                this.envelopesField = value;
            }
        }
        
        /// <remarks/>
        public string requestId {
            get {
                return this.requestIdField;
            }
            set {
                this.requestIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public long sentDate {
            get {
                return this.sentDateField;
            }
            set {
                this.sentDateField = value;
            }
        }
        
        /// <remarks/>
        public long archivedDate {
            get {
                return this.archivedDateField;
            }
            set {
                this.archivedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string bodyHighlight {
            get {
                return this.bodyHighlightField;
            }
            set {
                this.bodyHighlightField = value;
            }
        }
        
        /// <remarks/>
        public MatchInfo[] matches {
            get {
                return this.matchesField;
            }
            set {
                this.matchesField = value;
            }
        }
        
        /// <remarks/>
        public LexiconInfo1[] lexicons {
            get {
                return this.lexiconsField;
            }
            set {
                this.lexiconsField = value;
            }
        }
        
        /// <remarks/>
        public string nlpVersion {
            get {
                return this.nlpVersionField;
            }
            set {
                this.nlpVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string msgDirection {
            get {
                return this.msgDirectionField;
            }
            set {
                this.msgDirectionField = value;
            }
        }
        
        /// <remarks/>
        public bool policiesApplied {
            get {
                return this.policiesAppliedField;
            }
            set {
                this.policiesAppliedField = value;
            }
        }
        
        /// <remarks/>
        public PolicyMatch[] policyMatches {
            get {
                return this.policyMatchesField;
            }
            set {
                this.policyMatchesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string policiesSnapshot {
            get {
                return this.policiesSnapshotField;
            }
            set {
                this.policiesSnapshotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sampledBy {
            get {
                return this.sampledByField;
            }
            set {
                this.sampledByField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void storeDocumentCompletedEventHandler(object sender, storeDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class storeDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal storeDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void updateDocumentCompletedEventHandler(object sender, updateDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void retrieveCompleteCompletedEventHandler(object sender, retrieveCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void updateDocument1CompletedEventHandler(object sender, updateDocument1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateDocument1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateDocument1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void retrieveDocumentCompletedEventHandler(object sender, retrieveDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void previewDocumentCompletedEventHandler(object sender, previewDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class previewDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal previewDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void retrieveMimeCompletedEventHandler(object sender, retrieveMimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveMimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveMimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void retrieveMimeAndSampleCompletedEventHandler(object sender, retrieveMimeAndSampleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveMimeAndSampleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveMimeAndSampleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void isAliveCompletedEventHandler(object sender, isAliveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAliveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAliveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void destroyDocumentCompletedEventHandler(object sender, destroyDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class destroyDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal destroyDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void retrieveMimeWithHitHighlightedCompletedEventHandler(object sender, retrieveMimeWithHitHighlightedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveMimeWithHitHighlightedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveMimeWithHitHighlightedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void retrieveSCMessageCompletedEventHandler(object sender, retrieveSCMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveSCMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveSCMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SCMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SCMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void testMessagePushCompletedEventHandler(object sender, testMessagePushCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testMessagePushCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testMessagePushCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
